---
jupyter: python3
---

```{python}
#| colab: {base_uri: https://localhost:8080/}
pip install palmerpenguins
```

```{python}
import numpy as np
import pandas as pd
from sys import exit
from palmerpenguins import load_penguins
from plotnine import ggplot, aes, geom_point, geom_bar
```

1. Fill in the necessary code to write a function called `times_seven()`. The function should take a single argument (`x`) and multiply the input by 7.
  + This function should check that the argument is numeric.
  + This function should also excitedly announce (print) *“I love sevens!”* if the argument to the function is a 7.

```{python}
def times_seven(x):

  if not isinstance(x, (int, float)):
    exit("value is not numeric")

  if x == 7:
    print("i love sevens!")

  return x*7
```

2. Write and run some *unit tests* for your `times_seven` function.  What happens if the input to the function is `[1, 3, 5, 7]`?

```{python}
mylist = [1,3,5,7]
print(times_seven(mylist[0]))
print(times_seven(mylist[1]))
print(times_seven(mylist[2]))
times_seven(mylist[3])
```

3. Consider the following function:

```{python}
def add_or_subtract(first_num, second_num ,sub):

  if (sub == "add"):
    res = first_num + second_num
  elif (sub == "subtract"):
    res = first_num - second_num
  else:
    exit("Please choose `add` or `subtract` as the type.")

  return res
```

**Without running the code**, predict if the following will produce:

a. 1

b. -1

c. 30

d. An error defined by the function `add_or_subtract()`

e. An error defined in a different function, which is called inside the `add_or_subtract()` function

```{python}
aws = add_or_subtract(5, 6, "subtract")
aws

#prediction: the type will instantly apply to suntract overriding the function 


#add_or_subtract("orange")
#error will occur due to the first value not being an int d.
#add_or_subtract(5, 6, "multiply")

#error defined in function 
```

4. Consider the following code:

```{python}
first_num  = 5
second_num = 3

result = 8

#result = add_or_subtract(first_num, second_num = 4)

#result_2 = add_or_subtract(first_num)
```


In your Global Environment, what is the value of...

a. `first_num` = 5

b. `second_num` = 3

c. `result` = 8 as the second result line wont work due to inproper parameters 

d. `result_2` = missing two parameters, second_val, "add" or "subtract" 

